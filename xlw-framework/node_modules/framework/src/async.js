// Promise polyfill in this browser报错
import 'babel-polyfill'
import Vue from 'vue'
import Router from 'vue-router'
import './import-base.js'
import './import-plugins.js'
import './import-common.js'
import Store from './import-vuex.js'
import App from './import-layout.js'
Vue.use(Router)
// 函数式组件
let functionalComponentContext = require.context('../../../../src/components/', true, /component\..+index\.js$/)
functionalComponentContext.keys().forEach(path => {
  functionalComponentContext(path)
})
/*replace*/let pages=[{"path":"/src/pages/blacklist/page.blacklist.index.vue","name":"blacklist"},{"path":"/src/pages/carInformations/page.carInformation.index.vue","name":"carInformation","childrens":[{"path":"/src/pages/carInformations/childrens/details/details.vue","name":"details.vue"},{"path":"/src/pages/carInformations/childrens/list/list.vue","name":"list.vue"}]},{"path":"/src/pages/caseList/page.caseList.index.vue","name":"caseList","childrens":[{"path":"/src/pages/caseList/childrens/list/list.vue","name":"list.vue"},{"path":"/src/pages/caseList/childrens/record/record.vue","name":"record.vue"}]},{"path":"/src/pages/controlList/page.controlList.index.vue","name":"controlList"},{"path":"/src/pages/dict/page.dict.index.vue","name":"dict"},{"path":"/src/pages/dodgingTollEvidence/page.dodgingTollEvidence.index.vue","name":"dodgingTollEvidence"},{"path":"/src/pages/escapeStatistics/page.escapeStatistics.index.vue","name":"escapeStatistics"},{"path":"/src/pages/exportHistory/page.exportHistory.index.vue","name":"exportHistory"},{"path":"/src/pages/freeCharge/page.freeCharge.index.vue","name":"freeCharge"},{"path":"/src/pages/index/page.videoSolution.index.vue","name":"index"},{"path":"/src/pages/login/page.login.index.vue","name":"login"},{"path":"/src/pages/loginLogs/loginLogs.vue","name":"loginLogs"},{"path":"/src/pages/longLight/page.longLight.index.vue","name":"longLight"},{"path":"/src/pages/manStatistics/page.manStatistics.index.vue","name":"manStatistics"},{"path":"/src/pages/monitor/page.monitor.index.vue","name":"monitor","components":[{"path":"/src/pages/monitor/components/plate-big/plate-big.vue","name":"plate-big.vue"}]},{"path":"/src/pages/neverOut/page.neverOut.index.vue","name":"neverOut"},{"path":"/src/pages/operationLogs/operationLogs.vue","name":"operationLogs"},{"path":"/src/pages/organization/page.organization.index.vue","name":"organization","components":[{"path":"/src/pages/organization/components/org/org.vue","name":"org.vue"}]},{"path":"/src/pages/permission/page.permission.index.vue","name":"permission"},{"path":"/src/pages/realTimeAlarm/page.realTimeAlarm.index.vue","name":"realTimeAlarm"},{"path":"/src/pages/roles/page.roles.index.vue","name":"roles"},{"path":"/src/pages/setting/page.setting.index.vue","name":"setting"},{"path":"/src/pages/shortHeavy/page.shortHeavy.index.vue","name":"shortHeavy"},{"path":"/src/pages/shortTimeTravel/page.shortTimeTravel.index.vue","name":"shortTimeTravel"},{"path":"/src/pages/superSlow/page.superSlow.index.vue","name":"superSlow"},{"path":"/src/pages/suspectDodgingTollReport/page.suspectDodgingTollReport.index.vue","name":"suspectDodgingTollReport"},{"path":"/src/pages/users/users.vue","name":"users"}]
Vue.component('t-back', loadComponent_components.bind(this, {name: 'back', path: '/src/components/back/component.back.index.vue', components: []}))
      Vue.component('t-blackHandle', loadComponent_components.bind(this, {name: 'blackHandle', path: '/src/components/blackHandle/component.blackHandle.index.vue', components: []}))
      Vue.component('t-bottomFloat', loadComponent_components.bind(this, {name: 'bottomFloat', path: '/src/components/bottomFloat/component.bottomFloat.index.vue', components: []}))
      Vue.component('t-carDriverInfo', loadComponent_components.bind(this, {name: 'carDriverInfo', path: '/src/components/carDriverInfo/component.carDriverInfo.index.vue', components: []}))
      Vue.component('t-check-all', loadComponent_components.bind(this, {name: 'check-all', path: '/src/components/check-all/component.check-all.index.vue', components: []}))
      Vue.component('t-dialog-evidence', loadComponent_components.bind(this, {name: 'dialog-evidence', path: '/src/components/dialog-evidence/component.dialog-evidence.index.vue', components: []}))
      Vue.component('t-evidence', loadComponent_components.bind(this, {name: 'evidence', path: '/src/components/evidence/component.evidence.index.vue', components: []}))
      Vue.component('t-image-carousel', loadComponent_components.bind(this, {name: 'image-carousel', path: '/src/components/image-carousel/component.image-carousel.index.vue', components: []}))
      Vue.component('t-judgeimg', loadComponent_components.bind(this, {name: 'judgeimg', path: '/src/components/judgeimg/component.judgeimg.index.vue', components: []}))
      Vue.component('t-map-alarm-pop', loadComponent_components.bind(this, {name: 'map-alarm-pop', path: '/src/components/map-alarm-pop/component.map-alarm-pop.index.vue', components: []}))
      Vue.component('t-map-base', loadComponent_components.bind(this, {name: 'map-base', path: '/src/components/map-base/component.map-base.index.vue', components: []}))
      Vue.component('t-map-control-list', loadComponent_components.bind(this, {name: 'map-control-list', path: '/src/components/map-control-list/component.map-control-list.index.vue', components: []}))
      Vue.component('t-map-double-track', loadComponent_components.bind(this, {name: 'map-double-track', path: '/src/components/map-double-track/component.map-double-track.index.vue', components: []}))
      Vue.component('t-map-group', loadComponent_components.bind(this, {name: 'map-group', path: '/src/components/map-group/component.map-group.index.vue', components: []}))
      Vue.component('t-map-legend', loadComponent_components.bind(this, {name: 'map-legend', path: '/src/components/map-legend/component.map-legend.index.vue', components: []}))
      Vue.component('t-map-real-time-alarm', loadComponent_components.bind(this, {name: 'map-real-time-alarm', path: '/src/components/map-real-time-alarm/component.map-real-time-alarm.index.vue', components: []}))
      Vue.component('t-map-search', loadComponent_components.bind(this, {name: 'map-search', path: '/src/components/map-search/component.map-search.index.vue', components: []}))
      Vue.component('t-map-table', loadComponent_components.bind(this, {name: 'map-table', path: '/src/components/map-table/component.map-table.index.vue', components: []}))
      Vue.component('t-map-tool', loadComponent_components.bind(this, {name: 'map-tool', path: '/src/components/map-tool/component.map-tool.index.vue', components: []}))
      Vue.component('t-map-track', loadComponent_components.bind(this, {name: 'map-track', path: '/src/components/map-track/component.map-track.index.vue', components: []}))
      Vue.component('t-map-track-pop', loadComponent_components.bind(this, {name: 'map-track-pop', path: '/src/components/map-track-pop/component.map-track-pop.index.vue', components: []}))
      Vue.component('t-map-track-pop2', loadComponent_components.bind(this, {name: 'map-track-pop2', path: '/src/components/map-track-pop2/component.map-track-pop2.index.vue', components: []}))
      Vue.component('t-map-uj-track', loadComponent_components.bind(this, {name: 'map-uj-track', path: '/src/components/map-uj-track/component.map-uj-track.index.vue', components: []}))
      Vue.component('t-platee', loadComponent_components.bind(this, {name: 'platee', path: '/src/components/platee/component.platee.index.vue', components: []}))
      Vue.component('t-returnListPage', loadComponent_components.bind(this, {name: 'returnListPage', path: '/src/components/returnListPage/component.returnListPage.index.vue', components: []}))
      Vue.component('t-simple-menu', loadComponent_components.bind(this, {name: 'simple-menu', path: '/src/components/simple-menu/component.simple-menu.index.vue', components: []}))
      Vue.component('t-top-dodging', loadComponent_components.bind(this, {name: 'top-dodging', path: '/src/components/top-dodging/component.top-dodging.index.vue', components: []}))
      Vue.component('t-card-header', loadComponent_xlwComponents.bind(this, {name: 'card-header', path: '/xlw-components/node_modules/card-header/component.card-header.index.vue', components: []}))
      Vue.component('t-cropper', loadComponent_xlwComponents.bind(this, {name: 'cropper', path: '/xlw-components/node_modules/cropper/component.cropper.index.vue', components: []}))
      Vue.component('t-empty', loadComponent_xlwComponents.bind(this, {name: 'empty', path: '/xlw-components/node_modules/empty/component.empty.index.vue', components: []}))
      Vue.component('t-filter', loadComponent_xlwComponents.bind(this, {name: 'filter', path: '/xlw-components/node_modules/filter/component.filter.index.vue', components: []}))
      Vue.component('t-img-base', loadComponent_xlwComponents.bind(this, {name: 'img-base', path: '/xlw-components/node_modules/img-base/component.img-base.index.vue', components: []}))
      Vue.component('t-img-viewer', loadComponent_xlwComponents.bind(this, {name: 'img-viewer', path: '/xlw-components/node_modules/img-viewer/component.img-viewer.index.vue', components: []}))
      Vue.component('t-key-value', loadComponent_xlwComponents.bind(this, {name: 'key-value', path: '/xlw-components/node_modules/keyValue/component.key-value.index.vue', components: []}))
      Vue.component('t-plate', loadComponent_xlwComponents.bind(this, {name: 'plate', path: '/xlw-components/node_modules/plate/component.plate.index.vue', components: []}))
      Vue.component('t-table', loadComponent_xlwComponents.bind(this, {name: 'table', path: '/xlw-components/node_modules/table/component.table-notpagination.index.vue', components: []}))
      Vue.component('t-table-pagination', loadComponent_xlwComponents.bind(this, {name: 'table-pagination', path: '/xlw-components/node_modules/table-pagination/component.table-notpagination.index.vue', components: []}))
      Vue.component('t-video', loadComponent_xlwComponents.bind(this, {name: 'video', path: '/xlw-components/node_modules/video/component.video.index.vue', components: []}))
      /*replace*/
let routerConfig = []
pages.forEach(item => {
  let path = item.path.replace(/(^.+\/).+$/, '$1').replace(/^\/src\/pages/, '')
  routerConfig.push({
    path: item.name === 'index' ? `/` : `/${item.name}`,
    name: item.name,
    component: resolve => require([
      '../../../../src/pages' + item.path.replace(/^\/src\/pages/, ''),
      '../../../../src/pages' + path + 'event.js',
      '../../../../src/pages' + path + 'methods.js',
      '../../../../src/pages' + path + 'model.js',
      '../../../../src/pages' + path + 'request.js'
    ], installComponent.bind(this, resolve, item, loadComponent_page, {})),
    children: (item.childrens || []).map(children => {
      let path = children.path.replace(/(^.+\/).+$/, '$1').replace(/^\/src\/pages/, '')
      return {
        name: item.name + '/' + children.name.replace(/\.vue$/, ''),
        path: '/' + children.name.replace(/\.vue$/, ''),
        component: resolve => require([
          '../../../../src/pages' + children.path.replace(/^\/src\/pages/, ''),
          '../../../../src/pages' + path + 'event.js',
          '../../../../src/pages' + path + 'methods.js',
          '../../../../src/pages' + path + 'model.js',
          '../../../../src/pages' + path + 'request.js'
        ], installComponent.bind(this, resolve, children, loadComponent_page, {
          // 最先执行的生命周期
          beforeRouteEnter (to, from, next) {
            let storageName = to.path + '|params'
            // 如果是页面刷新
            if (from.name === null && !sessionStorage['isRefresh']) {
              let storage = sessionStorage[storageName]
              storage = storage && JSON.parse(storage)
              let params = _.isEmpty(to.params) ? storage : to.params
              sessionStorage['isRefresh'] = 1
              next({name: to.name, params}) // 这里会重新执行 beforeRouteEnter，为了不导致死循环，需要有个标记
              sessionStorage.removeItem('isRefresh')
            } else {
              if (!_.isEmpty(to.params) && to.params) {
                sessionStorage[storageName] = JSON.stringify(to.params)
              }
              next()
            }
          }
        }))
      }
    }),
    meta: {
      keepAlive: false
    }
  })
})
Vue.config.productionTip = false
routerConfig = new Router({
  routes: routerConfig
})
window.$app = new Vue({
  el: '#app',
  router: routerConfig,
  store: Store,
  template: '<App/>',
  components: {App}
})
// 加载页面里的组件文件，配合 installComponent 形成递归，加载所有子组件
function loadComponent_page (file, resolve) {
  let path = file.path.replace(/(^.+\/).+$/, '$1').replace(/^\/src\/pages/, '')
  require([
    '../../../../src/pages' + file.path.replace(/^\/src\/pages/, ''),
    '../../../../src/pages' + path + 'event.js',
    '../../../../src/pages' + path + 'methods.js',
    '../../../../src/pages' + path + 'model.js',
    '../../../../src/pages' + path + 'request.js'
  ], installComponent.bind(this, resolve, file, loadComponent_page, {
    // 最先执行的生命周期
    beforeRouteEnter (to, from, next) {
      let storageName = to.path + '|params'
      // 如果是页面刷新
      if (from.name === null && !sessionStorage['isRefresh']) {
        let storage = sessionStorage[storageName]
        storage = storage && JSON.parse(storage)
        let params = _.isEmpty(to.params) ? storage : to.params
        sessionStorage['isRefresh'] = 1
        next({name: to.name, params}) // 这里会重新执行 beforeRouteEnter，为了不导致死循环，需要有个标记
        sessionStorage.removeItem('isRefresh')
      } else {
        if (!_.isEmpty(to.params) && to.params) {
          sessionStorage[storageName] = JSON.stringify(to.params)
        }
        next()
      }
    }
  }))
}
// 加载xlw-components里的组件文件，配合 installComponent 形成递归，加载所有子组件
function loadComponent_xlwComponents (file, resolve) {
  let path = file.path.replace(/(^.+\/).+$/, '$1').replace(/^\/xlw-components\/node_modules\//, '')
  // node_modules/ 后面的这个斜杠很关键，没有就报错../../../../xlw-components/node_modules can not find
  require([
    '../../../../xlw-components/node_modules/' + file.path.replace(/^\/xlw-components\/node_modules\//, ''),
    '../../../../xlw-components/node_modules/' + path + 'event.js',
    '../../../../xlw-components/node_modules/' + path + 'methods.js',
    '../../../../xlw-components/node_modules/' + path + 'model.js',
    '../../../../xlw-components/node_modules/' + path + 'request.js'
  ], installComponent.bind(this, resolve, file, loadComponent_xlwComponents, {}))
}
// 加载components里的组件文件，配合 installComponent 形成递归，加载所有子组件
function loadComponent_components (file, resolve) {
  let path = file.path.replace(/(^.+\/).+$/, '$1').replace(/^\/src\/components/, '')
  require([
    '../../../../src/components' + file.path.replace(/^\/src\/components/, ''),
    '../../../../src/components' + path + 'event.js',
    '../../../../src/components' + path + 'methods.js',
    '../../../../src/components' + path + 'model.js',
    '../../../../src/components' + path + 'request.js'
  ], installComponent.bind(this, resolve, file, loadComponent_components, {}))
}
function installComponent (resolve, file, loadComponent, mixin, Template, Event, Methods, Model, Request) {
  let instance = Template
  let methods = Methods.default
  let request = Request.default
  let {computed, data, props, filters} = Model
  let {event, life, watch} = Event
  let componentName = 't-' + file.name.replace(/^page\./, '').replace(/\.vue$/, '').replace(/\.index$/, '')
  resolve({
    filters,
    name: componentName,
    ...mixin,
    components: (function () {
      let result = {}
      file.components && file.components.forEach(component => {
        result['t-' + component.name.replace(/^page\./, '').replace(/\.vue$/, '').replace(/\.index$/, '')] = function (resolve) {
          loadComponent(component, resolve)
        }
      })
      return result
    })(),
    extends: instance.default,
    props,
    data () {
      return Mixins.init(this, {data, event, methods, request})
    },
    computed: {
      ...computed
    },
    watch: {
      ...watch
    },
    ...life
  })
}
