let necessary = ['model.js', 'event.js', 'methods.js', 'request.js']
function findVueFile (context, requireFile, basePath) {
  let split = /\//.test(context.keys()[0]) ? '/' : '\\'
  let fileReg = split + '([^' + split + ']+\\.vue$)'
  let pathReg = '(^\.+' + split + ')[^' + split + ']+\\.vue$'
  let files = []
  context.keys().forEach(path => {
    let match = path.match(new RegExp(`${pathReg}`))
    let pathItem = (match && match[1]) || './'
    if (files.pathItem === pathItem) {
      throw new Error('\n路径：' + basePath + pathItem.replace(/^\./, '').replace(/^\//, '') + '中包含了多个 *.vue 文件')
    }
    files.pathItem = pathItem
    files.push({
      path: pathItem,
      instance: context(path).default,
      fileName: path.match(new RegExp(`${fileReg}`))[1]
    })
  })
  files.forEach(file => {
    let path = file.path
    necessary.forEach(name => {
      let nameModule = requireFile(path + name)
      if (!nameModule) {
        throw Error('\n路径：\n' + basePath + path.replace(/^\./, '').replace(/^\//, '') + '\n中缺少：\n文件：' + name)
      }
      file[name] = nameModule
    })
  })
  return files
}
export default findVueFile
