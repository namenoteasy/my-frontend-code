function extendsVueFile (baseVue, components, mixin) {
  if (baseVue.length === 0) return {}
  let resultComponents = {}
  baseVue.forEach(item => {
    let instance = item.instance
    let methods = item['methods.js'].default
    let request = item['request.js'].default
    let {computed, data, props, filters} = item['model.js']
    let {event, life, watch} = item['event.js']
    let componentName = item.componentName
    let myComponents = components.filter(sitem => item.path !== sitem.path && sitem.path.indexOf(item.path) === 0)
    resultComponents[componentName] = {
      filters,
      ...mixin,
      name: componentName,
      source: item,
      extends: instance,
      components: extendsVueFile(myComponents, components),
      props,
      data () {
        return Mixins.init(this, {data, event, methods, request})
      },
      computed: {
        ...computed
      },
      watch: {
        ...watch
      },
      ...life
    }
  })
  return resultComponents
}
export default extendsVueFile
